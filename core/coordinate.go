package core

// MantÄ±ksal taÅŸ konumu (oyun kurallarÄ± bazlÄ±)
type LogicalCoordinate struct {
	//Tavlada 24 nokta (PointIndex) var. Ãœst sÄ±ra (12â€“23): X = 0â€“11, Alt sÄ±ra (11â€“0): X = 0â€“11
	//Y: Bir noktadaki taÅŸ yÄ±ÄŸÄ±nÄ±nÄ±n yÃ¼ksekliÄŸi. En alttaki taÅŸ: Y = 0, Ä°kinci taÅŸ: Y = 1, vs.
	PointIndex   int // 0â€“23 arasÄ±, -1 olabilir.
	PositionType int
	Player       int   // 1 veya 2
	StackIndex   int   // ðŸ‘ˆ yÄ±ÄŸÄ±ndaki sÄ±rasÄ± (en alttaki 0)
	IsTop        bool  // ðŸ‘ˆ yÄ±ÄŸÄ±nÄ±n en Ã¼stÃ¼ndeki taÅŸ mÄ±?
	MoveOrder    int64 // TaÅŸÄ±n hareket sÄ±rasÄ± => Bir yigina son eklenen en tepede olacak..StackIndex en usteki olacak..
}

// Grafiksel (X,Y) koordinat sistemi â€“ UI ya da gÃ¶rselleÅŸtirme iÃ§in
type VisualCoordinate struct {
	X int // 0â€“11 arasÄ± (noktalar)
	Y int // YÄ±ÄŸÄ±ndaki konum (Ã¶rneÄŸin taÅŸ yÃ¼ksekliÄŸi)
}

// X'ten pointIndex'e dÃ¶nÃ¼ÅŸÃ¼m fonksiyonu => UI'dan gelen degere gore kordinalandirma icin..
func VisualToPointIndex(x int, isTop bool) int {
	if isTop {
		return 12 + x // Ã¼st sÄ±ra: 12â€“23
	}
	return 11 - x // alt sÄ±ra: 11â€“0
}
